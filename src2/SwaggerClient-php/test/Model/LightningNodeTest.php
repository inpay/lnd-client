<?php
/**
 * LightningNodeTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * rpc.proto
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * LightningNodeTest Class Doc Comment
 *
 * @category    Class */
// * @description * An individual vertex/node within the channel graph. A node is connected to other nodes by one or more channel edges emanating from it. As the graph is directed, a node will also have an incoming edge attached to it for each outgoing edge.
/**
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class LightningNodeTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "LightningNode"
     */
    public function testLightningNode()
    {
    }

    /**
     * Test attribute "last_update"
     */
    public function testPropertyLastUpdate()
    {
    }

    /**
     * Test attribute "pub_key"
     */
    public function testPropertyPubKey()
    {
    }

    /**
     * Test attribute "alias"
     */
    public function testPropertyAlias()
    {
    }

    /**
     * Test attribute "addresses"
     */
    public function testPropertyAddresses()
    {
    }

    /**
     * Test attribute "color"
     */
    public function testPropertyColor()
    {
    }
}
